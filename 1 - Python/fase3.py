# -*- coding: utf-8 -*-
"""Fase3.ipynb

Automatically generated by Colaboratory.


Crie um algoritmo em Python que peça uma nota, entre zero e 100. Mostre uma mensagem caso o valor seja inválido e continue pedindo até que o usuário informe um valor válido.
"""

# INSIRA SEU CÓDIGO AQUI
print("Insira um valor entre 0 e 100")


while True:
  try:
    val = int(input("Valor: "))
    print(f"O valor é {val}")
    break
  except ValueError:
    print(f"Por favor, insira números, não aceitamos letras ou símbolos.")

"""Crie um algoritmo em Python que leia um nome de usuário e a sua senha e não aceite a senha igual ao nome do usuário, mostrando uma mensagem de erro e voltando a pedir as informações.<br>"""

# INSIRA SEU CÓDIGO AQUI
while True:
    print("________TELA DE LOGIN________\n Defina seu usuário e senha: ")
    nome = input("Nome de usuário: ")
    senha = input("Senha: ")
  
    if nome == senha: 
      print("Nome e senha não podem ser iguais!!!!")
    else:
      print("Usuário e senha definidos com sucesso!!")
      break

"""Crie um algoritmo em Python que leia e valide as seguintes informações:
* Nome: maior que 3 caracteres;
* Idade: entre 0 e 150;
* Salário: maior que zero;
* Sexo: 'f' ou 'm';
* Estado Civil: 's', 'c', 'v', 'd';
"""

# INSIRA SEU CÓDIGO AQUI
while True: 
  try:
    print("______Cadastro de Usuário______")
    nome = input("Nome: ")
    idade = int(input("Idade: "))
    salario = float(input("Salário: "))
    sexo = input("Sexo (F/M): ").upper()
    estado_civil = input("""Estado Civil:
    S = Solteiro(a)
    C = Casado(a)
    V = Viúvo(a)
    D = Divorciado(a)
:""").upper()
    tamanho_nome = len(nome)
    if tamanho_nome < 3:
      raise Exception("O seu nome deve conter no mínimo 3 caracteres")
    if idade < 0 or idade > 150:
      raise Exception("Por favor, insira uma idade válida.")
    if salario < 0:
      raise Exception("Por favor, insira um salário válido.")
    if sexo != 'M' and sexo != 'F':
      raise Exception("Por favor, insira valor de M ou F")
    if estado_civil != 'S' and estado_civil != 'C' and estado_civil != 'V' and estado_civil != 'D':
      raise Exception("Por favor, insira apenas S, C, V ou D para o campo estado civil.")
    break
  # except TypeError:
  #   print("Por favor, insira tipo de dado correto.")
  
  except Exception as err:
    print(err)

"""Supondo que a população de um país A seja da ordem de 80000 habitantes com uma taxa anual de crescimento de 3% e que a população de B seja 200000 habitantes com uma taxa de crescimento de 1.5%.<br><br> Crie um algoritmo em Python que calcule e escreva o número de anos necessários para que a população do país A ultrapasse ou iguale a população do país B, mantidas as taxas de crescimento."""

# INSIRA SEU CÓDIGO AQUI
pop_a = 80000
pop_b = 200000

c = 0 
while pop_a < pop_b:
  pop_a = pop_a * 1.03
  pop_b = pop_b * 1.015
  c = c + 1 

print(f"População Final A: {round(pop_a)} \nPopulação Final B: {round(pop_b)} \n Anos: {c} ")

"""Desenvolva um gerador de tabuada, capaz de gerar a tabuada de qualquer número inteiro entre 1 a 10. O usuário deve informar de qual numero ele deseja ver a tabuada. A saída deve ser conforme o exemplo abaixo:
Tabuada de 5:<br>
5 X 1 = 5<br>
5 X 2 = 10<br>
...<br>
5 X 10 = 50<br>
"""

# INSIRA SEU CÓDIGO AQUI
num = int(input("Insira o número que você quer ver a tabuada!: "))

for c in range(1, 11):
  mult = num * c
  print(f"{num} X {c} = {mult}")

"""Crie um algoritmo em Python que leia três números e mostre o maior e o menor deles."""

# INSIRA SEU CÓDIGO AQUI
print("Me dê 3 números e eu direi qual é o maior e menor entre eles!")
lista = []
for c in range(0,3):
  num = int(input(f"Número {c+1} :"))
  lista.append(num)
  
lista.sort()
print(f"O maior número é {lista[2]} e o menor é {lista[0]}")

"""Crie um algoritmo em Python que peça 2 números, base e expoente, calcule e mostre o primeiro número elevado ao segundo número. Não utilize a função de potência da linguagem."""

# INSIRA SEU CÓDIGO AQUI
print("Vamos calcular potência?")
base = int(input("Base: "))
expoente = int(input("Potência: "))
calc = base ** expoente

print(f"{base} ** {expoente} = {calc}")

"""Crie um algoritmo em Python que peça 10 números inteiros, calcule e mostre a quantidade de números pares e a quantidade de números impares."""

# INSIRA SEU CÓDIGO AQUI
print("Me dê 10 número inteiro e eu direi qual deles é par e qual deles é ímpar.")
par = []
impar = []
for c in range(0,10):
  num = int(input(f"Número {c+1}: "))
  if num % 2 == 0:
    par.append(num)
  elif num % 2 == 1:
    impar.append(num)

print(f"Ímpares {impar}, Pares {par}")

"""Um funcionário de uma empresa recebe aumento salarial anualmente: Sabe-se que:
Esse funcionário foi contratado em 1995, com salário inicial de R$ 1.000,00;
Em 1996 recebeu aumento de 1,5% sobre seu salário inicial;
A partir de 1997 (inclusive), os aumentos salariais sempre correspondem ao dobro do percentual do ano anterior. Crie um algoritmo em Python que determine o salário atual desse funcionário. Após concluir isto, altere o programa permitindo que o usuário digite o salário inicial do funcionário.
"""

# INSIRA SEU CÓDIGO AQUI
from datetime import date

ano_atual = date.today().year
ano_contr = int(input("Em que ano você foi contratado: "))
calc_year = ano_atual - ano_contr
salario = float(input("Quanto você ganhava quando foi contratado: "))
perc_aument = 0.015
aumento = salario * perc_aument

for c in range(0, calc_year):
  salario = salario + aumento
  aumento = aumento * 2
  print(aumento)

print(f"Salário final: {salario}")

"""Crie um algoritmo em Python com uma função que necessite de um argumento. A função retorna o valor de caractere ‘P’, se seu argumento for positivo, e ‘N’, se seu argumento for zero ou negativo."""

# INSIRA SEU CÓDIGO AQUI
num = int(input("Insira um número: "))

if num > 0:
  print("P")
if num <= 0:
  print("N")

"""Construa uma função que receba uma data no formato DD/MM/AAAA e devolva uma string no formato D de mesPorExtenso de AAAA. Opcionalmente, valide a data e retorne NULL caso a data seja inválida."""

# INSIRA SEU CÓDIGO AQUI
meses = ['janeiro', 'fevereiro', 'marco', 'abril', 'maio', 'junho', 'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro']

def data_verifica(data):
  dia, mes, ano = map(int, data.split('/'))
  if dia > 31:
    print("Dia inválido.")
    return False 
  if mes > 12:
    print("Mês inválido.")
    return False
  print(f"Data: {dia}/{meses[mes-1]}/{ano}")
  return True

data_teste = data_verifica(input("Digite data com formato DD/MM/AAAA: "))

"""Crie uma classe que modele uma pessoa:<br>

Atributos: nome, idade, peso e altura<br>
Métodos: Envelhercer, engordar, emagrecer, crescer.<br>
<br>Obs: Por padrão, a cada ano que nossa pessoa envelhece, sendo a idade dela menor que 21 anos, ela deve crescer 0,5 cm.
"""

# INSIRA SEU CÓDIGO AQUI
class Pessoa:
  def __init__(self, nome, idade, peso, altura):
    self.nome = nome
    self.idade = idade
    self.peso = peso
    self.altura = altura
  
  def envelhecer(self):
    self.idade = self.idade + 1 
  
  def engordar(self):
    self.peso = self.peso + 1
  
  def emagrecer(self):
    self.peso = self.peso - 1
  
  def crescer(self):
    if idade < 21:
      self.altura = self.altura + 0.5


pessoa1 = Pessoa('Maiyuri', 19, 800, 1.65)
print(pessoa1.nome, pessoa1.peso)
pessoa1.engordar()
print(pessoa1.nome, pessoa1.peso)
pessoa1.emagrecer()
print(pessoa1.nome, pessoa1.peso)
pessoa1.envelhecer()
print(pessoa1.nome, pessoa1.idade)
