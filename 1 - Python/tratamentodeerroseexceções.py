# -*- coding: utf-8 -*-
"""TratamentoDeErrosEExceções.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13f4ygER9pQ8RgUvvbW7lzorL1jQyoSYK

# **>>> Tratando Erros e Exceções**

---

Erros vão acontecer e é importante que você os preveja e trate-os antes de sua aparição.

---

### **>>> Erros Comuns**
IOError: Se o arquivo não puder ser aberto/salvo.
<br>ImportError: Se o python não encontra o módulo
<br>ValueError: Operação recebe valor inadequado
<br>KeyboardInterrupt: Quando usuário clica DELETE ou CTRL+C
<br>EOFError: Quando o input não recebe nenhum dado
<br>TypeError: Erro de tipo para operação
"""

x = input("Digite um número:")
print(x/1)

"""## **>>> Try / Except**

---
"""

# Try = tentar
# Except = Exceção

try:
  x = input("Digite um número:")
  print(x/1)
except TypeError:
  print("Erro de tipo!")

while True:
  try:
    x = int(input("Digite um número inteiro: "))
    print(f"Dividindo 100 por {x} teremos {int(100/x)}")
    break
  except ValueError:
    print("O valor digitado não é um inteiro. Tente novamente")

"""## **>>> Else**

---
"""

try:
  x = int(input("Digite um número inteiro: "))
  print(f"Dividindo 100 por {x} teremos {int(100/x)}")
except ValueError:
  print("O valor digitado não é um inteiro. Tente novamente")  
else:
  print("Executado com sucesso!")

"""## **>>> Finally**

---
"""

while True:
  try:
    x = int(input("Digite um número inteiro: "))
    print(f"Dividindo 100 por {x} teremos {int(100/x)}")
    break
  except ValueError:
    print("O valor digitado não é um inteiro. Tente novamente")  
  finally:
    print("O finally executa o bloco havendo ou não exceções!")

"""## **>>> Resumindo...**

---

try: seu código;
<br>except: tratamento dos erros;
<br>else: tratamento com senão;
<br>finally: executa com ou sem exceções;

# **>>> Exercícios**

---

**1.** Crie um código em Python que solicite do usuário o input de um número inteiro. Caso haja preenchimento diferente, a máquina deve  guiar o usuário até ajustar sua resposta. (Fácil)
"""

# Insira seu código aqui
while True: 
  try:
    num = int(input("Digite um número inteiro: "))
    break
  except ValueError:
    print("O que você digitou não é um número inteiro, tente novamente.")

"""**2.** Crie um código em Python que solicite do usuário o input de 2 números inteiros e assim divida o primeiro número pelo segundo. Caso o input não seja um número inteiro, seu código deve guiar o usuário até o preenchimento correto. Caso o usuário preencha com 0,  que apresente mensagem falando sobre a indivisibilidade por zero. Caso o usuário não digite um número, informar que um número deve ser digitado. Em outros casos de erro, apresente ao usuário uma mensagem de erro inesperado.(Médio)"""

# Insira seu código aqui
while True:
  try:
    num = int(input("Digite um número inteiro: "))
    num2 = int(input("Digite outro número inteiro, irei calcular a divisão entre eles!: "))
    divisao = num / num2
    print(f"O Valor da divisão é {divisao}")
    break
  except ZeroDivisionError:
    print("Não é possível dividir valor por 0 (zero)")
  except ValueError:
    print("Por favor, insira apenas números.")

"""**3.** Crie um código em Python que peça um número ímpar do usuário. Caso o número seja par, apresente mensagem guiando o usuário até o preenchimento correto(Difícil)"""

# Insira seu código aqui
while True:
  try:
    num = int(input("Por favor, insira um valor ímpar: "))
    if num % 2 == 0:
      print("Por favor, insira um valor ímpar!")
    else:
      print("Vlw! o valor que você inseriu é ímpar.")
      break
  except ValueError:
    print("Por favor, não insira letras.")

"""# **Solução**"""

# Exercício 1
while True:
  try:
    x = int(input("Digite um número inteiro: "))
    print(f"Dividindo 100 por {x} teremos {int(100/x)}")
    break
  except ValueError:
    print("O valor digitado não é um inteiro. Tente novamente")

# Exercício 2
while True:
  try:
      x = int( input( "Digite 1 número: " ) )
      y = int( input( "Digite outro número: " ) )
      print( x, '/', y, '=', x/y )
      break
  except ZeroDivisionError:
      print( "Indivisível por 0!" )
  except ValueError:
      print( "Isto nem parece ser um número!" )
  except:
      print( "Algo inesperado ocorreu! Tente novamente" )

# Exercício 3
while True:
  try:
    x = int(input("Digite um número ímpar: "))
    print(x%3)
  except:
    if x%2 == 0:
      print("Este número é par. Preencha com um valor ímpar")